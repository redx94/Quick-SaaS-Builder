name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install npm@latest
        run: npm install -g npm@latest

      - name: Install dependencies
        run: |
          npm cache clean --force
          npm install
        env:
          CI: true

      - name: Build project
        run: npm run build
        env:
          CI: true

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Python dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip ca-certificates
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade qiskit

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

      - name: Run Python tests
        env:
          REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
        run: python -m unittest discover test

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t my-image .

      - name: Log in to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push my-image

    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
