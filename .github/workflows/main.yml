name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-stage Docker builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker images
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: user/quick-saas:latest

      # Step 5: Set up Node.js for running tests
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Step 6: Install Node.js dependencies
      - name: Install Dependencies
        run: npm install

      # Step 7: Run Unit Tests for Frontend and Backend
      - name: Run Unit Tests
        run: |
          npm test
          python3 -m unittest discover tests/unit

      # Step 8: Deploy to Vercel (for the frontend)
      - name: Deploy to Vercel
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} || echo "Vercel deployment failed."

      # Step 9: Deploy to AWS ECS (for the backend)
      - name: Deploy to AWS ECS
        if: github.ref == 'refs/heads/main'
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment
          || echo "AWS ECS deployment failed."

  notify:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      # Send notifications based on success or failure
      - name: Notify Success
        if: success()
        run: echo "Build, test, and deployment succeeded!"
      - name: Notify Failure
        if: failure()
        run: echo "Build, test, or deployment failed."
