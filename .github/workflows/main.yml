name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      # Install dependencies and configure SSL
      - name: Install and Configure Dependencies
        run: |
          # Update and configure SSL certificates
          sudo apt-get update
          sudo apt-get install -y ca-certificates python3-pip
          sudo update-ca-certificates
          npm config set registry https://registry.npmjs.org/
          npm config set strict-ssl true
          
          # Install Python dependencies
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          # Install Node.js dependencies
          npm ci

      # Run tests
      - name: Run Tests
        run: |
          # Run Python tests
          python -m pytest tests/
          
          # Run Node.js tests
          npm test

      # Build Project
      - name: Build Project
        run: |
          npm run build

      # Upload build artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist
          retention-days: 5

  # Docker job
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      # Build Docker image
      - name: Build Docker Image
        run: docker build -t my-image .

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push Docker image
      - name: Push Docker Image
        run: docker push my-image
